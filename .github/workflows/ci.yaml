# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI

on:
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    environment: 'prod'
    env:
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}
      DB_SERVER: ${{ secrets.DB_SERVER }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_DATABASE_PORT: ${{ secrets.DB_DATABASE_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DRIVER: ${{ secrets.DB_DRIVER }}
      WEB_FE_ORIGIN: ${{ secrets.WEB_FE_ORIGIN }}
      WEB_FE_ORIGIN_STG: ${{ secrets.WEB_FE_ORIGIN_STG }}   # To be shifted into Environment Secrets with _STG removed when Activity stg server is up
      PATIENT_BE_ORIGIN: ${{ secrets.PATIENT_BE_ORIGIN }}
      USER_BE_ORIGIN: ${{ secrets.USER_BE_ORIGIN }}
      RABBITMQ_HOST: ${{ secrets.RABBITMQ_HOST }}
      RABBITMQ_PORT: ${{ secrets.RABBITMQ_PORT }}
      RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
      RABBITMQ_PASS: ${{ secrets.RABBITMQ_PASS }}
      RABBITMQ_VIRTUAL_HOST: ${{ secrets.RABBITMQ_VIRTUAL_HOST }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9.19
        uses: actions/setup-python@v3
        with:
          python-version: '3.9.19'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Check app imports
        run: |
          python -c "from app.main import app; print('All imports successful')"

      - name: Test unit tests with pytest
        run: |
          python -m pytest tests/unit

  integration-test:
    runs-on: [self-hosted, Linux, X64, activity]
    needs: build
    environment: 'test'
    env:
        SERVICE_NAME: ${{ vars.SERVICE_NAME }}
        DB_SERVER: ${{ secrets.DB_SERVER }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_DATABASE_PORT: ${{ secrets.DB_DATABASE_PORT }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DRIVER: ${{ secrets.DB_DRIVER }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9.19
        uses: actions/setup-python@v3
        with:
          python-version: '3.9.19'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Check app imports
        run: |
          python -c "from app.main import app; print('All imports successful')"
      
      - name: Test integration tests with pytest
        env:
          DB_DATABASE_DEV: ${{ secrets.DB_DATABASE }}
          DB_DRIVER_DEV: ${{ secrets.DB_DRIVER }}
        run: |
          python -m pytest tests/integration
